{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Head from \"next/head\";\nimport Image from \"next/image\";\nimport { useEffect, useState } from \"react\";\nimport styles from \"../styles/Home.module.css\";\nimport Card from \"../components/Card\";\nimport Modal from \"../components/Modal\";\nimport ConfirmationModal from \"../components/ConfirmationModal\";\nexport default function Home() {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  const {\n    0: searchInput,\n    1: setSearchInput\n  } = useState(\"\");\n  const {\n    0: searchForTags,\n    1: setSearchForTags\n  } = useState(false);\n  const {\n    0: toolSelected,\n    1: setToolSelected\n  } = useState({});\n  const {\n    0: addModal,\n    1: setAddModal\n  } = useState(false);\n  const {\n    0: addToolModal,\n    1: setAddToolModal\n  } = useState(false);\n  const {\n    0: confirmationModal,\n    1: setConfirmationModal\n  } = useState(false);\n\n  async function fetchPosts() {\n    const res = await fetch(\"http://localhost:3000/tools\");\n    const data = await res.json();\n    setPosts(data);\n  }\n\n  async function fetchFilteredPosts() {\n    if (!searchForTags) {\n      const res = await fetch(`http://localhost:3000/tools?q=${searchInput}`);\n      const data = await res.json();\n      setPosts(data);\n    } else {\n      const res = await fetch(`http://localhost:3000/tools?tags_like=${searchInput}`);\n      const data = await res.json();\n      setPosts(data);\n    }\n  }\n\n  function handleAddPost() {\n    setAddModal(true);\n    setAddToolModal(true);\n  }\n\n  function handleCloseModal() {\n    setAddModal(false);\n    setAddToolModal(false);\n    setConfirmationModal(false);\n  }\n\n  function handleSelectPost(content) {\n    setToolSelected(content);\n    setAddModal(true);\n    setConfirmationModal(true);\n  }\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => fetchFilteredPosts(), 500);\n    return () => clearTimeout(timeoutId);\n  }, [searchInput, searchForTags]);\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"VUTTR\"\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      })]\n    }), /*#__PURE__*/_jsxs(\"main\", {\n      className: `${styles.main} ${addModal && styles.modalIsOpen}`,\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        className: styles.title,\n        children: \"VUTTR\"\n      }), /*#__PURE__*/_jsx(\"h2\", {\n        children: \"Very Useful Tools to Remember\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.header,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.headerLeft,\n          children: [/*#__PURE__*/_jsxs(\"svg\", {\n            className: styles.searchIcon,\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"47.707\",\n            height: \"47.707\",\n            viewBox: \"0 0 47.707 47.707\",\n            style: {\n              fill: \"none\",\n              stroke: \"#170c3a\",\n              strokeMiterlimit: 10,\n              strokeWidth: \"2px\",\n              width: \"20px\",\n              height: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsx(\"defs\", {}), /*#__PURE__*/_jsxs(\"g\", {\n              transform: \"translate(-1272 -1799)\",\n              children: [/*#__PURE__*/_jsx(\"path\", {\n                className: \"a\",\n                d: \"M39.049,39.049,56,56\",\n                transform: \"translate(1263 1790)\"\n              }), /*#__PURE__*/_jsx(\"circle\", {\n                className: \"a\",\n                cx: \"17\",\n                cy: \"17\",\n                r: \"17\",\n                transform: \"translate(1273 1800)\"\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            className: styles.searchInput,\n            type: \"text\",\n            placeholder: \"search\",\n            value: searchInput,\n            onChange: e => setSearchInput(e.target.value)\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"checkbox\",\n            value: searchForTags,\n            onChange: () => setSearchForTags(!searchForTags)\n          }), /*#__PURE__*/_jsx(\"label\", {\n            className: styles.searchLabel,\n            children: \"search in tags only\"\n          })]\n        }), /*#__PURE__*/_jsxs(\"button\", {\n          className: styles.addButton,\n          onClick: handleAddPost,\n          children: [/*#__PURE__*/_jsxs(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"61.414\",\n            height: \"61.42\",\n            viewBox: \"0 0 61.414 61.42\",\n            style: {\n              fill: \"none\",\n              stroke: \"#FFFFFF\",\n              strokeMiterlimit: 10,\n              strokeWidth: \"10px\",\n              transform: \"rotate(45deg)\",\n              width: \"15px\",\n              height: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsx(\"defs\", {}), /*#__PURE__*/_jsx(\"g\", {\n              transform: \"translate(-568.793 -714.793)\",\n              children: /*#__PURE__*/_jsx(\"path\", {\n                className: \"a\",\n                d: \"M80,20.005l-60,60m60,0L20,20\",\n                transform: \"translate(549.501 695.5)\"\n              })\n            })]\n          }), /*#__PURE__*/_jsx(\"label\", {\n            className: styles.addLabel,\n            children: \"Add\"\n          })]\n        })]\n      }), !posts.length == 0 ? posts.map(post => {\n        return /*#__PURE__*/_jsx(Card, {\n          content: post,\n          onDelete: fetchPosts,\n          setToolSelected: handleSelectPost\n        }, post.id);\n      }) : /*#__PURE__*/_jsx(\"div\", {\n        className: styles.noPosts,\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.noPostsImg,\n          children: [/*#__PURE__*/_jsx(Image, {\n            src: \"/caveman.gif\",\n            alt: \"Not Found\",\n            width: 500,\n            height: 400\n          }), /*#__PURE__*/_jsx(\"h2\", {\n            className: styles.notFound,\n            children: \"Ooops, no posts found...\"\n          })]\n        })\n      }), addToolModal && /*#__PURE__*/_jsx(Modal, {\n        setAddModal: handleCloseModal,\n        fetchPosts: fetchPosts\n      }), toolSelected && confirmationModal && /*#__PURE__*/_jsx(ConfirmationModal, {\n        setAddModal: handleCloseModal,\n        tool: toolSelected,\n        fetchPosts: fetchPosts\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
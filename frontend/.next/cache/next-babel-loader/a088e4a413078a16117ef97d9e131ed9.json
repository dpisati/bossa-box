{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRef, useState } from \"react\";\nimport styles from \"./Modal.module.css\";\nexport default function Modal({\n  setAddModal,\n  fetchPosts\n}) {\n  const tagInput = useRef(null);\n  let initialErrors = {};\n  const {\n    0: errors,\n    1: setErrors\n  } = useState(initialErrors);\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n  const {\n    0: link,\n    1: setLink\n  } = useState(\"\");\n  const {\n    0: description,\n    1: setDescription\n  } = useState(\"\");\n  const {\n    0: tag,\n    1: setTag\n  } = useState(\"\");\n  const {\n    0: tags,\n    1: setTags\n  } = useState([]);\n\n  async function validateForm() {\n    let initialErrors = {};\n\n    if (title.length === 0) {\n      initialErrors.title = \"Title is required\";\n    }\n\n    if (link.length === 0) {\n      initialErrors.link = \"Link is required\";\n    }\n\n    if (description.length === 0) {\n      initialErrors.description = \"Description is required\";\n    }\n\n    if (tags.length === 0) {\n      initialErrors.tags = \"A Tag is required\";\n    }\n\n    setErrors(initialErrors);\n\n    if (Object.keys(initialErrors).length === 0) {\n      await fetch(\"http://localhost:3000/tools\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          link,\n          description,\n          tags\n        })\n      });\n      fetchPosts();\n      handleCloseModal();\n    }\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await validateForm();\n  }\n\n  function handleCloseModal() {\n    setAddModal(false);\n    setTitle(\"\");\n    setDescription(\"\");\n    setLink(\"\");\n    setTag(\"\");\n    setTags([]);\n  }\n\n  function handleAddTag() {\n    const trimTag = tag.trim();\n\n    if (trimTag) {\n      handleFocus();\n      setTags([...tags, trimTag]);\n      setTag(\"\");\n    }\n\n    return handleFocus();\n  }\n\n  function handleRemoveTag(e) {\n    const result = tags.filter(word => word != e);\n    setTags(result);\n  }\n\n  function handleFocus() {\n    tagInput.current.focus();\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.modal,\n    children: /*#__PURE__*/_jsx(\"form\", {\n      onSubmit: handleSubmit,\n      onKeyPress: e => {\n        e.key === \"Enter\" && e.preventDefault();\n      },\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.modalBody,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: styles.modalHeader,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: styles.modalHeaderAdd,\n            children: [/*#__PURE__*/_jsxs(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"61.414\",\n              height: \"61.42\",\n              viewBox: \"0 0 61.414 61.42\",\n              style: {\n                fill: \"none\",\n                stroke: \"#170C3A\",\n                strokeMiterlimit: 10,\n                strokeWidth: \"10px\",\n                transform: \"rotate(45deg)\",\n                width: \"15px\",\n                height: \"15px\"\n              },\n              children: [/*#__PURE__*/_jsx(\"defs\", {}), /*#__PURE__*/_jsx(\"g\", {\n                transform: \"translate(-568.793 -714.793)\",\n                children: /*#__PURE__*/_jsx(\"path\", {\n                  className: \"a\",\n                  d: \"M80,20.005l-60,60m60,0L20,20\",\n                  transform: \"translate(549.501 695.5)\"\n                })\n              })]\n            }), /*#__PURE__*/_jsx(\"h3\", {\n              className: styles.modalTitle,\n              children: \"Add a new tool\"\n            })]\n          }), /*#__PURE__*/_jsxs(\"svg\", {\n            className: styles.closeModal,\n            onClick: handleCloseModal,\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"13.414\",\n            height: \"13.415\",\n            viewBox: \"0 0 13.414 13.415\",\n            style: {\n              fill: \"none\",\n              stroke: \"#8f8a9b\",\n              strokeMiterlimit: 10,\n              strokeWidth: \"2px\"\n            },\n            children: [/*#__PURE__*/_jsx(\"defs\", {}), /*#__PURE__*/_jsx(\"path\", {\n              className: \"a\",\n              d: \"M32,20,20,32m12,0L20,20\",\n              transform: \"translate(-19.292 -19.293)\"\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.modalContent,\n          children: [/*#__PURE__*/_jsxs(\"label\", {\n            className: styles.modalLabel,\n            children: [\"Tool Title \", /*#__PURE__*/_jsx(\"span\", {\n              className: `${errors.title && styles.span}`,\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            className: `${styles.modalInput} ${errors.title && styles.modalInputError}`,\n            type: \"text\",\n            value: title,\n            onChange: e => {\n              setTitle(e.target.value);\n              setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n                title: \"\"\n              }));\n            }\n          }), errors.title && /*#__PURE__*/_jsx(\"p\", {\n            className: styles.modalErrorMessage,\n            children: errors.title\n          }), /*#__PURE__*/_jsxs(\"label\", {\n            className: styles.modalLabel,\n            children: [\"Link \", /*#__PURE__*/_jsx(\"span\", {\n              className: `${errors.link && styles.span}`,\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            className: `${styles.modalInput} ${errors.link && styles.modalInputError}`,\n            type: \"text\",\n            value: link,\n            onChange: e => {\n              setLink(e.target.value);\n              setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n                link: \"\"\n              }));\n            }\n          }), errors.link && /*#__PURE__*/_jsx(\"p\", {\n            className: styles.modalErrorMessage,\n            children: errors.link\n          }), /*#__PURE__*/_jsxs(\"label\", {\n            className: styles.modalLabel,\n            children: [\"Description \", /*#__PURE__*/_jsx(\"span\", {\n              className: `${errors.description && styles.span}`,\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            className: `${styles.modalInputTextArea} ${errors.description && styles.modalInputTextAreaError}`,\n            type: \"text\",\n            value: description,\n            onChange: e => {\n              setDescription(e.target.value);\n              setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n                description: \"\"\n              }));\n            }\n          }), errors.description && /*#__PURE__*/_jsx(\"p\", {\n            className: styles.modalErrorMessage,\n            children: errors.description\n          }), /*#__PURE__*/_jsxs(\"label\", {\n            className: styles.modalLabel,\n            children: [\"Tags \", /*#__PURE__*/_jsx(\"span\", {\n              className: `${errors.tags && styles.span}`,\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.addTags,\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              ref: tagInput,\n              className: `${styles.modalInput} ${errors.tags && styles.modalInputError}`,\n              type: \"text\",\n              value: tag,\n              onKeyPress: e => {\n                e.key === \"Enter\" && (e.preventDefault(), handleAddTag());\n              },\n              onChange: e => {\n                setTag(e.target.value);\n                setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n                  tags: \"\"\n                }));\n              }\n            }), errors.tags && /*#__PURE__*/_jsx(\"p\", {\n              className: styles.modalErrorMessage,\n              children: errors.tags\n            }), /*#__PURE__*/_jsx(\"div\", {\n              onClick: () => handleAddTag(),\n              className: styles.addTagField,\n              children: /*#__PURE__*/_jsx(\"svg\", {\n                className: styles.addTag,\n                xmlns: \"http://www.w3.org/2000/svg\",\n                viewBox: \"0 0 61.414 61.42\",\n                children: /*#__PURE__*/_jsx(\"g\", {\n                  transform: \"translate(-568.793 -714.793)\",\n                  children: /*#__PURE__*/_jsx(\"path\", {\n                    className: \"addTag\",\n                    d: \"M80,20.005l-60,60m60,0L20,20\",\n                    transform: \"translate(549.501 695.5)\"\n                  })\n                })\n              })\n            }), /*#__PURE__*/_jsx(\"p\", {\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: styles.tagsContainer,\n                children: tags && tags.map(tag => {\n                  return /*#__PURE__*/_jsxs(\"div\", {\n                    className: styles.tag,\n                    value: tag,\n                    onClick: () => handleRemoveTag(tag),\n                    children: [/*#__PURE__*/_jsx(\"p\", {\n                      children: tag\n                    }), /*#__PURE__*/_jsxs(\"svg\", {\n                      className: styles.removeTag,\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      width: \"10\",\n                      height: \"10\",\n                      viewBox: \"0 0 13.414 13.415\",\n                      style: {\n                        fill: \"none\",\n                        stroke: \"#8f8a9b\",\n                        strokeMiterlimit: 10,\n                        strokeWidth: \"2px\"\n                      },\n                      children: [/*#__PURE__*/_jsx(\"defs\", {}), /*#__PURE__*/_jsx(\"path\", {\n                        className: \"a\",\n                        d: \"M32,20,20,32m12,0L20,20\",\n                        transform: \"translate(-19.292 -19.293)\"\n                      })]\n                    })]\n                  });\n                })\n              })\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"footer\", {\n          className: styles.modalFooter,\n          children: [/*#__PURE__*/_jsx(\"button\", {\n            className: styles.cancelButton,\n            onClick: handleCloseModal,\n            children: \"Cancel\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: styles.saveButton,\n            type: \"submit\",\n            value: \"Submit\",\n            children: \"Save\"\n          })]\n        })]\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}